// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: messages/integrations_discord/integrations_discord.proto

package integrations_discord

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelType int32

const (
	ChannelType_VOICE ChannelType = 0
	ChannelType_TEXT  ChannelType = 1
)

// Enum value maps for ChannelType.
var (
	ChannelType_name = map[int32]string{
		0: "VOICE",
		1: "TEXT",
	}
	ChannelType_value = map[string]int32{
		"VOICE": 0,
		"TEXT":  1,
	}
)

func (x ChannelType) Enum() *ChannelType {
	p := new(ChannelType)
	*p = x
	return p
}

func (x ChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_integrations_discord_integrations_discord_proto_enumTypes[0].Descriptor()
}

func (ChannelType) Type() protoreflect.EnumType {
	return &file_messages_integrations_discord_integrations_discord_proto_enumTypes[0]
}

func (x ChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelType.Descriptor instead.
func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{0}
}

type GetAuthLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthLink) Reset() {
	*x = GetAuthLink{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthLink) ProtoMessage() {}

func (x *GetAuthLink) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthLink.ProtoReflect.Descriptor instead.
func (*GetAuthLink) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{0}
}

func (x *GetAuthLink) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type PostCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostCodeRequest) Reset() {
	*x = PostCodeRequest{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCodeRequest) ProtoMessage() {}

func (x *PostCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCodeRequest.ProtoReflect.Descriptor instead.
func (*PostCodeRequest) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{1}
}

func (x *PostCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type DiscordGuild struct {
	state                                    protoimpl.MessageState `protogen:"open.v1"`
	Id                                       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                                     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon                                     string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	LiveNotificationEnabled                  bool                   `protobuf:"varint,4,opt,name=live_notification_enabled,json=liveNotificationEnabled,proto3" json:"live_notification_enabled,omitempty"`
	LiveNotificationChannelsIds              []string               `protobuf:"bytes,5,rep,name=live_notification_channels_ids,json=liveNotificationChannelsIds,proto3" json:"live_notification_channels_ids,omitempty"`
	LiveNotificationShowTitle                bool                   `protobuf:"varint,6,opt,name=live_notification_show_title,json=liveNotificationShowTitle,proto3" json:"live_notification_show_title,omitempty"`
	LiveNotificationShowCategory             bool                   `protobuf:"varint,7,opt,name=live_notification_show_category,json=liveNotificationShowCategory,proto3" json:"live_notification_show_category,omitempty"`
	LiveNotificationMessage                  string                 `protobuf:"bytes,8,opt,name=live_notification_message,json=liveNotificationMessage,proto3" json:"live_notification_message,omitempty"`
	LiveNotificationAdditionalTwitchUsersIds []string               `protobuf:"bytes,9,rep,name=live_notification_additional_twitch_users_ids,json=liveNotificationAdditionalTwitchUsersIds,proto3" json:"live_notification_additional_twitch_users_ids,omitempty"`
	Channels                                 []*GuildChannel        `protobuf:"bytes,10,rep,name=channels,proto3" json:"channels,omitempty"`
	Roles                                    []*GuildRole           `protobuf:"bytes,11,rep,name=roles,proto3" json:"roles,omitempty"`
	OfflineNotificationMessage               string                 `protobuf:"bytes,12,opt,name=offline_notification_message,json=offlineNotificationMessage,proto3" json:"offline_notification_message,omitempty"`
	LiveNotificationShowViewers              bool                   `protobuf:"varint,13,opt,name=live_notification_show_viewers,json=liveNotificationShowViewers,proto3" json:"live_notification_show_viewers,omitempty"`
	LiveNotificationShowPreview              bool                   `protobuf:"varint,14,opt,name=live_notification_show_preview,json=liveNotificationShowPreview,proto3" json:"live_notification_show_preview,omitempty"`
	LiveNotificationShowProfileImage         bool                   `protobuf:"varint,15,opt,name=live_notification_show_profile_image,json=liveNotificationShowProfileImage,proto3" json:"live_notification_show_profile_image,omitempty"`
	ShouldDeleteMessageOnOffline             bool                   `protobuf:"varint,16,opt,name=should_delete_message_on_offline,json=shouldDeleteMessageOnOffline,proto3" json:"should_delete_message_on_offline,omitempty"`
	AdditionalUsersIdsForLiveCheck           []string               `protobuf:"bytes,17,rep,name=additional_users_ids_for_live_check,json=additionalUsersIdsForLiveCheck,proto3" json:"additional_users_ids_for_live_check,omitempty"`
	unknownFields                            protoimpl.UnknownFields
	sizeCache                                protoimpl.SizeCache
}

func (x *DiscordGuild) Reset() {
	*x = DiscordGuild{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscordGuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscordGuild) ProtoMessage() {}

func (x *DiscordGuild) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscordGuild.ProtoReflect.Descriptor instead.
func (*DiscordGuild) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{2}
}

func (x *DiscordGuild) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiscordGuild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscordGuild) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *DiscordGuild) GetLiveNotificationEnabled() bool {
	if x != nil {
		return x.LiveNotificationEnabled
	}
	return false
}

func (x *DiscordGuild) GetLiveNotificationChannelsIds() []string {
	if x != nil {
		return x.LiveNotificationChannelsIds
	}
	return nil
}

func (x *DiscordGuild) GetLiveNotificationShowTitle() bool {
	if x != nil {
		return x.LiveNotificationShowTitle
	}
	return false
}

func (x *DiscordGuild) GetLiveNotificationShowCategory() bool {
	if x != nil {
		return x.LiveNotificationShowCategory
	}
	return false
}

func (x *DiscordGuild) GetLiveNotificationMessage() string {
	if x != nil {
		return x.LiveNotificationMessage
	}
	return ""
}

func (x *DiscordGuild) GetLiveNotificationAdditionalTwitchUsersIds() []string {
	if x != nil {
		return x.LiveNotificationAdditionalTwitchUsersIds
	}
	return nil
}

func (x *DiscordGuild) GetChannels() []*GuildChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *DiscordGuild) GetRoles() []*GuildRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *DiscordGuild) GetOfflineNotificationMessage() string {
	if x != nil {
		return x.OfflineNotificationMessage
	}
	return ""
}

func (x *DiscordGuild) GetLiveNotificationShowViewers() bool {
	if x != nil {
		return x.LiveNotificationShowViewers
	}
	return false
}

func (x *DiscordGuild) GetLiveNotificationShowPreview() bool {
	if x != nil {
		return x.LiveNotificationShowPreview
	}
	return false
}

func (x *DiscordGuild) GetLiveNotificationShowProfileImage() bool {
	if x != nil {
		return x.LiveNotificationShowProfileImage
	}
	return false
}

func (x *DiscordGuild) GetShouldDeleteMessageOnOffline() bool {
	if x != nil {
		return x.ShouldDeleteMessageOnOffline
	}
	return false
}

func (x *DiscordGuild) GetAdditionalUsersIdsForLiveCheck() []string {
	if x != nil {
		return x.AdditionalUsersIdsForLiveCheck
	}
	return nil
}

type GetDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guilds        []*DiscordGuild        `protobuf:"bytes,1,rep,name=guilds,proto3" json:"guilds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDataResponse) Reset() {
	*x = GetDataResponse{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResponse) ProtoMessage() {}

func (x *GetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResponse.ProtoReflect.Descriptor instead.
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{3}
}

func (x *GetDataResponse) GetGuilds() []*DiscordGuild {
	if x != nil {
		return x.Guilds
	}
	return nil
}

type UpdateMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guilds        []*DiscordGuild        `protobuf:"bytes,1,rep,name=guilds,proto3" json:"guilds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMessage) Reset() {
	*x = UpdateMessage{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessage) ProtoMessage() {}

func (x *UpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessage.ProtoReflect.Descriptor instead.
func (*UpdateMessage) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateMessage) GetGuilds() []*DiscordGuild {
	if x != nil {
		return x.Guilds
	}
	return nil
}

type DisconnectGuildMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectGuildMessage) Reset() {
	*x = DisconnectGuildMessage{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectGuildMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectGuildMessage) ProtoMessage() {}

func (x *DisconnectGuildMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectGuildMessage.ProtoReflect.Descriptor instead.
func (*DisconnectGuildMessage) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{5}
}

func (x *DisconnectGuildMessage) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type GuildChannel struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type            ChannelType            `protobuf:"varint,3,opt,name=type,proto3,enum=messages.integrations_discord.ChannelType" json:"type,omitempty"`
	CanSendMessages bool                   `protobuf:"varint,4,opt,name=can_send_messages,json=canSendMessages,proto3" json:"can_send_messages,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GuildChannel) Reset() {
	*x = GuildChannel{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannel) ProtoMessage() {}

func (x *GuildChannel) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannel.ProtoReflect.Descriptor instead.
func (*GuildChannel) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{6}
}

func (x *GuildChannel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GuildChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildChannel) GetType() ChannelType {
	if x != nil {
		return x.Type
	}
	return ChannelType_VOICE
}

func (x *GuildChannel) GetCanSendMessages() bool {
	if x != nil {
		return x.CanSendMessages
	}
	return false
}

type GuildRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildRole) Reset() {
	*x = GuildRole{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRole) ProtoMessage() {}

func (x *GuildRole) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRole.ProtoReflect.Descriptor instead.
func (*GuildRole) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{7}
}

func (x *GuildRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GuildRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildRole) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetGuildChannelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGuildChannelsRequest) Reset() {
	*x = GetGuildChannelsRequest{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGuildChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildChannelsRequest) ProtoMessage() {}

func (x *GetGuildChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildChannelsRequest.ProtoReflect.Descriptor instead.
func (*GetGuildChannelsRequest) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{8}
}

func (x *GetGuildChannelsRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type GetGuildChannelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []*GuildChannel        `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGuildChannelsResponse) Reset() {
	*x = GetGuildChannelsResponse{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGuildChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildChannelsResponse) ProtoMessage() {}

func (x *GetGuildChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildChannelsResponse.ProtoReflect.Descriptor instead.
func (*GetGuildChannelsResponse) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{9}
}

func (x *GetGuildChannelsResponse) GetChannels() []*GuildChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type GetGuildInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGuildInfoRequest) Reset() {
	*x = GetGuildInfoRequest{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGuildInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildInfoRequest) ProtoMessage() {}

func (x *GetGuildInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildInfoRequest.ProtoReflect.Descriptor instead.
func (*GetGuildInfoRequest) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{10}
}

func (x *GetGuildInfoRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type GetGuildInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon          string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Channels      []*GuildChannel        `protobuf:"bytes,4,rep,name=channels,proto3" json:"channels,omitempty"`
	Roles         []*GuildRole           `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGuildInfoResponse) Reset() {
	*x = GetGuildInfoResponse{}
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGuildInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuildInfoResponse) ProtoMessage() {}

func (x *GetGuildInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_integrations_discord_integrations_discord_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuildInfoResponse.ProtoReflect.Descriptor instead.
func (*GetGuildInfoResponse) Descriptor() ([]byte, []int) {
	return file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP(), []int{11}
}

func (x *GetGuildInfoResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGuildInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGuildInfoResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetGuildInfoResponse) GetChannels() []*GuildChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *GetGuildInfoResponse) GetRoles() []*GuildRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

var File_messages_integrations_discord_integrations_discord_proto protoreflect.FileDescriptor

const file_messages_integrations_discord_integrations_discord_proto_rawDesc = "" +
	"\n" +
	"8messages/integrations_discord/integrations_discord.proto\x12\x1dmessages.integrations_discord\"!\n" +
	"\vGetAuthLink\x12\x12\n" +
	"\x04link\x18\x01 \x01(\tR\x04link\"%\n" +
	"\x0fPostCodeRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"\xa6\b\n" +
	"\fDiscordGuild\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12:\n" +
	"\x19live_notification_enabled\x18\x04 \x01(\bR\x17liveNotificationEnabled\x12C\n" +
	"\x1elive_notification_channels_ids\x18\x05 \x03(\tR\x1bliveNotificationChannelsIds\x12?\n" +
	"\x1clive_notification_show_title\x18\x06 \x01(\bR\x19liveNotificationShowTitle\x12E\n" +
	"\x1flive_notification_show_category\x18\a \x01(\bR\x1cliveNotificationShowCategory\x12:\n" +
	"\x19live_notification_message\x18\b \x01(\tR\x17liveNotificationMessage\x12_\n" +
	"-live_notification_additional_twitch_users_ids\x18\t \x03(\tR(liveNotificationAdditionalTwitchUsersIds\x12G\n" +
	"\bchannels\x18\n" +
	" \x03(\v2+.messages.integrations_discord.GuildChannelR\bchannels\x12>\n" +
	"\x05roles\x18\v \x03(\v2(.messages.integrations_discord.GuildRoleR\x05roles\x12@\n" +
	"\x1coffline_notification_message\x18\f \x01(\tR\x1aofflineNotificationMessage\x12C\n" +
	"\x1elive_notification_show_viewers\x18\r \x01(\bR\x1bliveNotificationShowViewers\x12C\n" +
	"\x1elive_notification_show_preview\x18\x0e \x01(\bR\x1bliveNotificationShowPreview\x12N\n" +
	"$live_notification_show_profile_image\x18\x0f \x01(\bR liveNotificationShowProfileImage\x12F\n" +
	" should_delete_message_on_offline\x18\x10 \x01(\bR\x1cshouldDeleteMessageOnOffline\x12K\n" +
	"#additional_users_ids_for_live_check\x18\x11 \x03(\tR\x1eadditionalUsersIdsForLiveCheck\"V\n" +
	"\x0fGetDataResponse\x12C\n" +
	"\x06guilds\x18\x01 \x03(\v2+.messages.integrations_discord.DiscordGuildR\x06guilds\"T\n" +
	"\rUpdateMessage\x12C\n" +
	"\x06guilds\x18\x01 \x03(\v2+.messages.integrations_discord.DiscordGuildR\x06guilds\"3\n" +
	"\x16DisconnectGuildMessage\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\"\x9e\x01\n" +
	"\fGuildChannel\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12>\n" +
	"\x04type\x18\x03 \x01(\x0e2*.messages.integrations_discord.ChannelTypeR\x04type\x12*\n" +
	"\x11can_send_messages\x18\x04 \x01(\bR\x0fcanSendMessages\"E\n" +
	"\tGuildRole\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\"4\n" +
	"\x17GetGuildChannelsRequest\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\"c\n" +
	"\x18GetGuildChannelsResponse\x12G\n" +
	"\bchannels\x18\x01 \x03(\v2+.messages.integrations_discord.GuildChannelR\bchannels\"0\n" +
	"\x13GetGuildInfoRequest\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\"\xd7\x01\n" +
	"\x14GetGuildInfoResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12G\n" +
	"\bchannels\x18\x04 \x03(\v2+.messages.integrations_discord.GuildChannelR\bchannels\x12>\n" +
	"\x05roles\x18\x05 \x03(\v2(.messages.integrations_discord.GuildRoleR\x05roles*\"\n" +
	"\vChannelType\x12\t\n" +
	"\x05VOICE\x10\x00\x12\b\n" +
	"\x04TEXT\x10\x01B@Z>github.com/twirapp/twir/libs/api/messages/integrations_discordb\x06proto3"

var (
	file_messages_integrations_discord_integrations_discord_proto_rawDescOnce sync.Once
	file_messages_integrations_discord_integrations_discord_proto_rawDescData []byte
)

func file_messages_integrations_discord_integrations_discord_proto_rawDescGZIP() []byte {
	file_messages_integrations_discord_integrations_discord_proto_rawDescOnce.Do(func() {
		file_messages_integrations_discord_integrations_discord_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_integrations_discord_integrations_discord_proto_rawDesc), len(file_messages_integrations_discord_integrations_discord_proto_rawDesc)))
	})
	return file_messages_integrations_discord_integrations_discord_proto_rawDescData
}

var file_messages_integrations_discord_integrations_discord_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_integrations_discord_integrations_discord_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_messages_integrations_discord_integrations_discord_proto_goTypes = []any{
	(ChannelType)(0),                 // 0: messages.integrations_discord.ChannelType
	(*GetAuthLink)(nil),              // 1: messages.integrations_discord.GetAuthLink
	(*PostCodeRequest)(nil),          // 2: messages.integrations_discord.PostCodeRequest
	(*DiscordGuild)(nil),             // 3: messages.integrations_discord.DiscordGuild
	(*GetDataResponse)(nil),          // 4: messages.integrations_discord.GetDataResponse
	(*UpdateMessage)(nil),            // 5: messages.integrations_discord.UpdateMessage
	(*DisconnectGuildMessage)(nil),   // 6: messages.integrations_discord.DisconnectGuildMessage
	(*GuildChannel)(nil),             // 7: messages.integrations_discord.GuildChannel
	(*GuildRole)(nil),                // 8: messages.integrations_discord.GuildRole
	(*GetGuildChannelsRequest)(nil),  // 9: messages.integrations_discord.GetGuildChannelsRequest
	(*GetGuildChannelsResponse)(nil), // 10: messages.integrations_discord.GetGuildChannelsResponse
	(*GetGuildInfoRequest)(nil),      // 11: messages.integrations_discord.GetGuildInfoRequest
	(*GetGuildInfoResponse)(nil),     // 12: messages.integrations_discord.GetGuildInfoResponse
}
var file_messages_integrations_discord_integrations_discord_proto_depIdxs = []int32{
	7, // 0: messages.integrations_discord.DiscordGuild.channels:type_name -> messages.integrations_discord.GuildChannel
	8, // 1: messages.integrations_discord.DiscordGuild.roles:type_name -> messages.integrations_discord.GuildRole
	3, // 2: messages.integrations_discord.GetDataResponse.guilds:type_name -> messages.integrations_discord.DiscordGuild
	3, // 3: messages.integrations_discord.UpdateMessage.guilds:type_name -> messages.integrations_discord.DiscordGuild
	0, // 4: messages.integrations_discord.GuildChannel.type:type_name -> messages.integrations_discord.ChannelType
	7, // 5: messages.integrations_discord.GetGuildChannelsResponse.channels:type_name -> messages.integrations_discord.GuildChannel
	7, // 6: messages.integrations_discord.GetGuildInfoResponse.channels:type_name -> messages.integrations_discord.GuildChannel
	8, // 7: messages.integrations_discord.GetGuildInfoResponse.roles:type_name -> messages.integrations_discord.GuildRole
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_messages_integrations_discord_integrations_discord_proto_init() }
func file_messages_integrations_discord_integrations_discord_proto_init() {
	if File_messages_integrations_discord_integrations_discord_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_integrations_discord_integrations_discord_proto_rawDesc), len(file_messages_integrations_discord_integrations_discord_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_integrations_discord_integrations_discord_proto_goTypes,
		DependencyIndexes: file_messages_integrations_discord_integrations_discord_proto_depIdxs,
		EnumInfos:         file_messages_integrations_discord_integrations_discord_proto_enumTypes,
		MessageInfos:      file_messages_integrations_discord_integrations_discord_proto_msgTypes,
	}.Build()
	File_messages_integrations_discord_integrations_discord_proto = out.File
	file_messages_integrations_discord_integrations_discord_proto_goTypes = nil
	file_messages_integrations_discord_integrations_discord_proto_depIdxs = nil
}

/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter optimize_code_size,generate_dependencies,eslint_disable,server_none
// @generated from protobuf file "messages/integrations_discord/integrations_discord.proto" (package "messages.integrations_discord", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message messages.integrations_discord.GetAuthLink
 */
export interface GetAuthLink {
    /**
     * @generated from protobuf field: string link = 1;
     */
    link: string;
}
/**
 * @generated from protobuf message messages.integrations_discord.PostCodeRequest
 */
export interface PostCodeRequest {
    /**
     * @generated from protobuf field: string code = 1;
     */
    code: string;
}
/**
 * @generated from protobuf message messages.integrations_discord.DiscordGuild
 */
export interface DiscordGuild {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string icon = 3;
     */
    icon: string;
    /**
     * @generated from protobuf field: bool live_notification_enabled = 4;
     */
    liveNotificationEnabled: boolean;
    /**
     * @generated from protobuf field: repeated string live_notification_channels_ids = 5;
     */
    liveNotificationChannelsIds: string[];
    /**
     * @generated from protobuf field: bool live_notification_show_title = 6;
     */
    liveNotificationShowTitle: boolean;
    /**
     * @generated from protobuf field: bool live_notification_show_category = 7;
     */
    liveNotificationShowCategory: boolean;
    /**
     * @generated from protobuf field: string live_notification_message = 8;
     */
    liveNotificationMessage: string;
    /**
     * @generated from protobuf field: repeated string live_notification_additional_twitch_users_ids = 9;
     */
    liveNotificationAdditionalTwitchUsersIds: string[];
    /**
     * @generated from protobuf field: repeated messages.integrations_discord.GuildChannel channels = 10;
     */
    channels: GuildChannel[];
    /**
     * @generated from protobuf field: repeated messages.integrations_discord.GuildRole roles = 11;
     */
    roles: GuildRole[];
    /**
     * @generated from protobuf field: string offline_notification_message = 12;
     */
    offlineNotificationMessage: string;
    /**
     * @generated from protobuf field: bool live_notification_show_viewers = 13;
     */
    liveNotificationShowViewers: boolean;
    /**
     * @generated from protobuf field: bool live_notification_show_preview = 14;
     */
    liveNotificationShowPreview: boolean;
    /**
     * @generated from protobuf field: bool live_notification_show_profile_image = 15;
     */
    liveNotificationShowProfileImage: boolean;
    /**
     * @generated from protobuf field: bool should_delete_message_on_offline = 16;
     */
    shouldDeleteMessageOnOffline: boolean;
    /**
     * @generated from protobuf field: repeated string additional_users_ids_for_live_check = 17;
     */
    additionalUsersIdsForLiveCheck: string[];
}
/**
 * @generated from protobuf message messages.integrations_discord.GetDataResponse
 */
export interface GetDataResponse {
    /**
     * @generated from protobuf field: repeated messages.integrations_discord.DiscordGuild guilds = 1;
     */
    guilds: DiscordGuild[];
}
/**
 * @generated from protobuf message messages.integrations_discord.UpdateMessage
 */
export interface UpdateMessage {
    /**
     * @generated from protobuf field: repeated messages.integrations_discord.DiscordGuild guilds = 1;
     */
    guilds: DiscordGuild[];
}
/**
 * @generated from protobuf message messages.integrations_discord.DisconnectGuildMessage
 */
export interface DisconnectGuildMessage {
    /**
     * @generated from protobuf field: string guild_id = 1;
     */
    guildId: string;
}
/**
 * @generated from protobuf message messages.integrations_discord.GuildChannel
 */
export interface GuildChannel {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: messages.integrations_discord.ChannelType type = 3;
     */
    type: ChannelType;
    /**
     * @generated from protobuf field: bool can_send_messages = 4;
     */
    canSendMessages: boolean;
}
/**
 * @generated from protobuf message messages.integrations_discord.GuildRole
 */
export interface GuildRole {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string color = 3;
     */
    color: string;
}
/**
 * @generated from protobuf message messages.integrations_discord.GetGuildChannelsRequest
 */
export interface GetGuildChannelsRequest {
    /**
     * @generated from protobuf field: string guild_id = 1;
     */
    guildId: string;
}
/**
 * @generated from protobuf message messages.integrations_discord.GetGuildChannelsResponse
 */
export interface GetGuildChannelsResponse {
    /**
     * @generated from protobuf field: repeated messages.integrations_discord.GuildChannel channels = 1;
     */
    channels: GuildChannel[];
}
/**
 * @generated from protobuf message messages.integrations_discord.GetGuildInfoRequest
 */
export interface GetGuildInfoRequest {
    /**
     * @generated from protobuf field: string guild_id = 1;
     */
    guildId: string;
}
/**
 * @generated from protobuf message messages.integrations_discord.GetGuildInfoResponse
 */
export interface GetGuildInfoResponse {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string icon = 3;
     */
    icon: string;
    /**
     * @generated from protobuf field: repeated messages.integrations_discord.GuildChannel channels = 4;
     */
    channels: GuildChannel[];
    /**
     * @generated from protobuf field: repeated messages.integrations_discord.GuildRole roles = 5;
     */
    roles: GuildRole[];
}
/**
 * @generated from protobuf enum messages.integrations_discord.ChannelType
 */
export enum ChannelType {
    /**
     * @generated from protobuf enum value: VOICE = 0;
     */
    VOICE = 0,
    /**
     * @generated from protobuf enum value: TEXT = 1;
     */
    TEXT = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class GetAuthLink$Type extends MessageType<GetAuthLink> {
    constructor() {
        super("messages.integrations_discord.GetAuthLink", [
            { no: 1, name: "link", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GetAuthLink
 */
export const GetAuthLink = new GetAuthLink$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PostCodeRequest$Type extends MessageType<PostCodeRequest> {
    constructor() {
        super("messages.integrations_discord.PostCodeRequest", [
            { no: 1, name: "code", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.PostCodeRequest
 */
export const PostCodeRequest = new PostCodeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DiscordGuild$Type extends MessageType<DiscordGuild> {
    constructor() {
        super("messages.integrations_discord.DiscordGuild", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "live_notification_enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "live_notification_channels_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "live_notification_show_title", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "live_notification_show_category", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "live_notification_message", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "live_notification_additional_twitch_users_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "channels", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GuildChannel },
            { no: 11, name: "roles", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GuildRole },
            { no: 12, name: "offline_notification_message", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "live_notification_show_viewers", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "live_notification_show_preview", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "live_notification_show_profile_image", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "should_delete_message_on_offline", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "additional_users_ids_for_live_check", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.DiscordGuild
 */
export const DiscordGuild = new DiscordGuild$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDataResponse$Type extends MessageType<GetDataResponse> {
    constructor() {
        super("messages.integrations_discord.GetDataResponse", [
            { no: 1, name: "guilds", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => DiscordGuild }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GetDataResponse
 */
export const GetDataResponse = new GetDataResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateMessage$Type extends MessageType<UpdateMessage> {
    constructor() {
        super("messages.integrations_discord.UpdateMessage", [
            { no: 1, name: "guilds", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => DiscordGuild }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.UpdateMessage
 */
export const UpdateMessage = new UpdateMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DisconnectGuildMessage$Type extends MessageType<DisconnectGuildMessage> {
    constructor() {
        super("messages.integrations_discord.DisconnectGuildMessage", [
            { no: 1, name: "guild_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.DisconnectGuildMessage
 */
export const DisconnectGuildMessage = new DisconnectGuildMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GuildChannel$Type extends MessageType<GuildChannel> {
    constructor() {
        super("messages.integrations_discord.GuildChannel", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: () => ["messages.integrations_discord.ChannelType", ChannelType] },
            { no: 4, name: "can_send_messages", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GuildChannel
 */
export const GuildChannel = new GuildChannel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GuildRole$Type extends MessageType<GuildRole> {
    constructor() {
        super("messages.integrations_discord.GuildRole", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GuildRole
 */
export const GuildRole = new GuildRole$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildChannelsRequest$Type extends MessageType<GetGuildChannelsRequest> {
    constructor() {
        super("messages.integrations_discord.GetGuildChannelsRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GetGuildChannelsRequest
 */
export const GetGuildChannelsRequest = new GetGuildChannelsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildChannelsResponse$Type extends MessageType<GetGuildChannelsResponse> {
    constructor() {
        super("messages.integrations_discord.GetGuildChannelsResponse", [
            { no: 1, name: "channels", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GuildChannel }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GetGuildChannelsResponse
 */
export const GetGuildChannelsResponse = new GetGuildChannelsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildInfoRequest$Type extends MessageType<GetGuildInfoRequest> {
    constructor() {
        super("messages.integrations_discord.GetGuildInfoRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GetGuildInfoRequest
 */
export const GetGuildInfoRequest = new GetGuildInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildInfoResponse$Type extends MessageType<GetGuildInfoResponse> {
    constructor() {
        super("messages.integrations_discord.GetGuildInfoResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "channels", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GuildChannel },
            { no: 5, name: "roles", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GuildRole }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.integrations_discord.GetGuildInfoResponse
 */
export const GetGuildInfoResponse = new GetGuildInfoResponse$Type();

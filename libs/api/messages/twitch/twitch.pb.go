// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: messages/twitch/twitch.proto

package twitch

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TwitchGetUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Names         []string               `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TwitchGetUsersRequest) Reset() {
	*x = TwitchGetUsersRequest{}
	mi := &file_messages_twitch_twitch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchGetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchGetUsersRequest) ProtoMessage() {}

func (x *TwitchGetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_twitch_twitch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchGetUsersRequest.ProtoReflect.Descriptor instead.
func (*TwitchGetUsersRequest) Descriptor() ([]byte, []int) {
	return file_messages_twitch_twitch_proto_rawDescGZIP(), []int{0}
}

func (x *TwitchGetUsersRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *TwitchGetUsersRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type TwitchUser struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login           string                 `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	DisplayName     string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Type            string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	BroadcasterType string                 `protobuf:"bytes,5,opt,name=broadcaster_type,json=broadcasterType,proto3" json:"broadcaster_type,omitempty"`
	Description     string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ProfileImageUrl string                 `protobuf:"bytes,7,opt,name=profile_image_url,json=profileImageUrl,proto3" json:"profile_image_url,omitempty"`
	OfflineImageUrl string                 `protobuf:"bytes,8,opt,name=offline_image_url,json=offlineImageUrl,proto3" json:"offline_image_url,omitempty"`
	CreatedAt       string                 `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TwitchUser) Reset() {
	*x = TwitchUser{}
	mi := &file_messages_twitch_twitch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchUser) ProtoMessage() {}

func (x *TwitchUser) ProtoReflect() protoreflect.Message {
	mi := &file_messages_twitch_twitch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchUser.ProtoReflect.Descriptor instead.
func (*TwitchUser) Descriptor() ([]byte, []int) {
	return file_messages_twitch_twitch_proto_rawDescGZIP(), []int{1}
}

func (x *TwitchUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TwitchUser) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *TwitchUser) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *TwitchUser) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TwitchUser) GetBroadcasterType() string {
	if x != nil {
		return x.BroadcasterType
	}
	return ""
}

func (x *TwitchUser) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TwitchUser) GetProfileImageUrl() string {
	if x != nil {
		return x.ProfileImageUrl
	}
	return ""
}

func (x *TwitchUser) GetOfflineImageUrl() string {
	if x != nil {
		return x.OfflineImageUrl
	}
	return ""
}

func (x *TwitchUser) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type TwitchGetUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*TwitchUser          `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TwitchGetUsersResponse) Reset() {
	*x = TwitchGetUsersResponse{}
	mi := &file_messages_twitch_twitch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchGetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchGetUsersResponse) ProtoMessage() {}

func (x *TwitchGetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_twitch_twitch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchGetUsersResponse.ProtoReflect.Descriptor instead.
func (*TwitchGetUsersResponse) Descriptor() ([]byte, []int) {
	return file_messages_twitch_twitch_proto_rawDescGZIP(), []int{2}
}

func (x *TwitchGetUsersResponse) GetUsers() []*TwitchUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type TwitchSearchChannelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	TwirOnly      bool                   `protobuf:"varint,2,opt,name=twir_only,json=twirOnly,proto3" json:"twir_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TwitchSearchChannelsRequest) Reset() {
	*x = TwitchSearchChannelsRequest{}
	mi := &file_messages_twitch_twitch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchSearchChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchSearchChannelsRequest) ProtoMessage() {}

func (x *TwitchSearchChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_twitch_twitch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchSearchChannelsRequest.ProtoReflect.Descriptor instead.
func (*TwitchSearchChannelsRequest) Descriptor() ([]byte, []int) {
	return file_messages_twitch_twitch_proto_rawDescGZIP(), []int{3}
}

func (x *TwitchSearchChannelsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *TwitchSearchChannelsRequest) GetTwirOnly() bool {
	if x != nil {
		return x.TwirOnly
	}
	return false
}

type Channel struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login           string                 `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	DisplayName     string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ProfileImageUrl string                 `protobuf:"bytes,4,opt,name=profile_image_url,json=profileImageUrl,proto3" json:"profile_image_url,omitempty"`
	Title           string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	GameName        string                 `protobuf:"bytes,6,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	GameId          string                 `protobuf:"bytes,7,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	IsLive          bool                   `protobuf:"varint,8,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Channel) Reset() {
	*x = Channel{}
	mi := &file_messages_twitch_twitch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_messages_twitch_twitch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_messages_twitch_twitch_proto_rawDescGZIP(), []int{4}
}

func (x *Channel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Channel) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Channel) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Channel) GetProfileImageUrl() string {
	if x != nil {
		return x.ProfileImageUrl
	}
	return ""
}

func (x *Channel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Channel) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *Channel) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *Channel) GetIsLive() bool {
	if x != nil {
		return x.IsLive
	}
	return false
}

type TwitchSearchChannelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []*Channel             `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TwitchSearchChannelsResponse) Reset() {
	*x = TwitchSearchChannelsResponse{}
	mi := &file_messages_twitch_twitch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchSearchChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchSearchChannelsResponse) ProtoMessage() {}

func (x *TwitchSearchChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_twitch_twitch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchSearchChannelsResponse.ProtoReflect.Descriptor instead.
func (*TwitchSearchChannelsResponse) Descriptor() ([]byte, []int) {
	return file_messages_twitch_twitch_proto_rawDescGZIP(), []int{5}
}

func (x *TwitchSearchChannelsResponse) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

var File_messages_twitch_twitch_proto protoreflect.FileDescriptor

const file_messages_twitch_twitch_proto_rawDesc = "" +
	"\n" +
	"\x1cmessages/twitch/twitch.proto\x12\x0fmessages.twitch\"?\n" +
	"\x15TwitchGetUsersRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\"\xad\x02\n" +
	"\n" +
	"TwitchUser\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05login\x18\x02 \x01(\tR\x05login\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12)\n" +
	"\x10broadcaster_type\x18\x05 \x01(\tR\x0fbroadcasterType\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12*\n" +
	"\x11profile_image_url\x18\a \x01(\tR\x0fprofileImageUrl\x12*\n" +
	"\x11offline_image_url\x18\b \x01(\tR\x0fofflineImageUrl\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\tR\tcreatedAt\"K\n" +
	"\x16TwitchGetUsersResponse\x121\n" +
	"\x05users\x18\x01 \x03(\v2\x1b.messages.twitch.TwitchUserR\x05users\"P\n" +
	"\x1bTwitchSearchChannelsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x1b\n" +
	"\ttwir_only\x18\x02 \x01(\bR\btwirOnly\"\xe3\x01\n" +
	"\aChannel\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05login\x18\x02 \x01(\tR\x05login\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12*\n" +
	"\x11profile_image_url\x18\x04 \x01(\tR\x0fprofileImageUrl\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12\x1b\n" +
	"\tgame_name\x18\x06 \x01(\tR\bgameName\x12\x17\n" +
	"\agame_id\x18\a \x01(\tR\x06gameId\x12\x17\n" +
	"\ais_live\x18\b \x01(\bR\x06isLive\"T\n" +
	"\x1cTwitchSearchChannelsResponse\x124\n" +
	"\bchannels\x18\x01 \x03(\v2\x18.messages.twitch.ChannelR\bchannelsB2Z0github.com/twirapp/twir/libs/api/messages/twitchb\x06proto3"

var (
	file_messages_twitch_twitch_proto_rawDescOnce sync.Once
	file_messages_twitch_twitch_proto_rawDescData []byte
)

func file_messages_twitch_twitch_proto_rawDescGZIP() []byte {
	file_messages_twitch_twitch_proto_rawDescOnce.Do(func() {
		file_messages_twitch_twitch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_twitch_twitch_proto_rawDesc), len(file_messages_twitch_twitch_proto_rawDesc)))
	})
	return file_messages_twitch_twitch_proto_rawDescData
}

var file_messages_twitch_twitch_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_messages_twitch_twitch_proto_goTypes = []any{
	(*TwitchGetUsersRequest)(nil),        // 0: messages.twitch.TwitchGetUsersRequest
	(*TwitchUser)(nil),                   // 1: messages.twitch.TwitchUser
	(*TwitchGetUsersResponse)(nil),       // 2: messages.twitch.TwitchGetUsersResponse
	(*TwitchSearchChannelsRequest)(nil),  // 3: messages.twitch.TwitchSearchChannelsRequest
	(*Channel)(nil),                      // 4: messages.twitch.Channel
	(*TwitchSearchChannelsResponse)(nil), // 5: messages.twitch.TwitchSearchChannelsResponse
}
var file_messages_twitch_twitch_proto_depIdxs = []int32{
	1, // 0: messages.twitch.TwitchGetUsersResponse.users:type_name -> messages.twitch.TwitchUser
	4, // 1: messages.twitch.TwitchSearchChannelsResponse.channels:type_name -> messages.twitch.Channel
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_messages_twitch_twitch_proto_init() }
func file_messages_twitch_twitch_proto_init() {
	if File_messages_twitch_twitch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_twitch_twitch_proto_rawDesc), len(file_messages_twitch_twitch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_twitch_twitch_proto_goTypes,
		DependencyIndexes: file_messages_twitch_twitch_proto_depIdxs,
		MessageInfos:      file_messages_twitch_twitch_proto_msgTypes,
	}.Build()
	File_messages_twitch_twitch_proto = out.File
	file_messages_twitch_twitch_proto_goTypes = nil
	file_messages_twitch_twitch_proto_depIdxs = nil
}

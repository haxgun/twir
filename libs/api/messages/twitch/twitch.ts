/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter optimize_code_size,generate_dependencies,eslint_disable,server_none
// @generated from protobuf file "messages/twitch/twitch.proto" (package "messages.twitch", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message messages.twitch.TwitchGetUsersRequest
 */
export interface TwitchGetUsersRequest {
    /**
     * @generated from protobuf field: repeated string ids = 1;
     */
    ids: string[];
    /**
     * @generated from protobuf field: repeated string names = 2;
     */
    names: string[];
}
/**
 * @generated from protobuf message messages.twitch.TwitchUser
 */
export interface TwitchUser {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string login = 2;
     */
    login: string;
    /**
     * @generated from protobuf field: string display_name = 3;
     */
    displayName: string;
    /**
     * @generated from protobuf field: string type = 4;
     */
    type: string;
    /**
     * @generated from protobuf field: string broadcaster_type = 5;
     */
    broadcasterType: string;
    /**
     * @generated from protobuf field: string description = 6;
     */
    description: string;
    /**
     * @generated from protobuf field: string profile_image_url = 7;
     */
    profileImageUrl: string;
    /**
     * @generated from protobuf field: string offline_image_url = 8;
     */
    offlineImageUrl: string;
    /**
     * @generated from protobuf field: string created_at = 9;
     */
    createdAt: string;
}
/**
 * @generated from protobuf message messages.twitch.TwitchGetUsersResponse
 */
export interface TwitchGetUsersResponse {
    /**
     * @generated from protobuf field: repeated messages.twitch.TwitchUser users = 1;
     */
    users: TwitchUser[];
}
/**
 * @generated from protobuf message messages.twitch.TwitchSearchChannelsRequest
 */
export interface TwitchSearchChannelsRequest {
    /**
     * @generated from protobuf field: string query = 1;
     */
    query: string;
    /**
     * @generated from protobuf field: bool twir_only = 2;
     */
    twirOnly: boolean;
}
/**
 * @generated from protobuf message messages.twitch.Channel
 */
export interface Channel {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string login = 2;
     */
    login: string;
    /**
     * @generated from protobuf field: string display_name = 3;
     */
    displayName: string;
    /**
     * @generated from protobuf field: string profile_image_url = 4;
     */
    profileImageUrl: string;
    /**
     * @generated from protobuf field: string title = 5;
     */
    title: string;
    /**
     * @generated from protobuf field: string game_name = 6;
     */
    gameName: string;
    /**
     * @generated from protobuf field: string game_id = 7;
     */
    gameId: string;
    /**
     * @generated from protobuf field: bool is_live = 8;
     */
    isLive: boolean;
}
/**
 * @generated from protobuf message messages.twitch.TwitchSearchChannelsResponse
 */
export interface TwitchSearchChannelsResponse {
    /**
     * @generated from protobuf field: repeated messages.twitch.Channel channels = 1;
     */
    channels: Channel[];
}
// @generated message type with reflection information, may provide speed optimized methods
class TwitchGetUsersRequest$Type extends MessageType<TwitchGetUsersRequest> {
    constructor() {
        super("messages.twitch.TwitchGetUsersRequest", [
            { no: 1, name: "ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "names", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.twitch.TwitchGetUsersRequest
 */
export const TwitchGetUsersRequest = new TwitchGetUsersRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TwitchUser$Type extends MessageType<TwitchUser> {
    constructor() {
        super("messages.twitch.TwitchUser", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "login", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "display_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "broadcaster_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "profile_image_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "offline_image_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "created_at", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.twitch.TwitchUser
 */
export const TwitchUser = new TwitchUser$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TwitchGetUsersResponse$Type extends MessageType<TwitchGetUsersResponse> {
    constructor() {
        super("messages.twitch.TwitchGetUsersResponse", [
            { no: 1, name: "users", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => TwitchUser }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.twitch.TwitchGetUsersResponse
 */
export const TwitchGetUsersResponse = new TwitchGetUsersResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TwitchSearchChannelsRequest$Type extends MessageType<TwitchSearchChannelsRequest> {
    constructor() {
        super("messages.twitch.TwitchSearchChannelsRequest", [
            { no: 1, name: "query", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "twir_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.twitch.TwitchSearchChannelsRequest
 */
export const TwitchSearchChannelsRequest = new TwitchSearchChannelsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Channel$Type extends MessageType<Channel> {
    constructor() {
        super("messages.twitch.Channel", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "login", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "display_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "profile_image_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "game_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "game_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "is_live", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.twitch.Channel
 */
export const Channel = new Channel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TwitchSearchChannelsResponse$Type extends MessageType<TwitchSearchChannelsResponse> {
    constructor() {
        super("messages.twitch.TwitchSearchChannelsResponse", [
            { no: 1, name: "channels", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => Channel }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message messages.twitch.TwitchSearchChannelsResponse
 */
export const TwitchSearchChannelsResponse = new TwitchSearchChannelsResponse$Type();
